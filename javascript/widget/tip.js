/** * 操作提示浮层 */define(['regularjs', '../3rd/anime.js'], function(Regular, anime) {    require('../../css/tip.css');    var tip = Regular.extend({        template: '<div class="{type == 1 ? \'m-tip\' : \'m-toast\'} {showStatus ? \'success-tip\' : \'error-tip\'}" id="tip">\            <p>{msg}</p>\        </div>',        data: {            type: 2,//提示类型            showStatus: 0,            msg: ''        },        init: function() {        },        /**         * 成功提示         * @param  {string} msg 成功提示文案         */        showSucess: function(msg) {            msg ? msg : '成功操作';            this.data.type = 1;            this.data.showStatus = true;            this.data.msg = msg;             this.$update();            this.anmiate();        },        /**         * 失败提示         * @param  {string} msg 失败提示文案         */        showError: function(msg) {            msg ? msg : '失败操作';            this.data.type = 1;            this.data.showStatus = false;            this.data.msg = msg;             this.$update();            this.anmiate();        },        showTip: function(msg) {            msg ? msg : '失败操作';            this.data.type = 2;            this.data.msg = msg;             this.$update();            this.anmiate();        },        /**         * 动画效果         */        anmiate: function() {            var self = this;            document.getElementById('tip').style.display = 'block';            if (this.data.type == 1) {                if (this.alternate) {//如果存在就重新开始动画                    this.alternate.restart();                } else {                    this.alternate = anime({                        targets: '#tip',                        opacity: [1, 1],                        translateY: 45,                        direction: 'alternate'                    });                }            } else {                if (this.alternate2) {//如果存在就重新开始动画                    this.alternate2.restart();                } else {                    this.alternate2 = anime({                        targets: '#tip',                        opacity: [0, 1],                        translateY: [0, 0],                        direction: 'alternate',                        complete: function() {                           document.getElementById('tip').style.display = 'none';                        }                    });                }            }            return;            if (this.alternate) {//如果存在就重新开始动画                this.alternate.restart();            } else {                if (this.data.type == 1) {                    this.alternate = anime({                        targets: '#tip',                        translateY: 45,                        direction: 'alternate'                    });                } else {                    this.alternate = anime({                        targets: '#tip',                        opacity: [0, 1],                        direction: 'alternate',                        complete: function() {                           document.getElementById('tip').style.display = 'none';                        }                    });                }                            }        }    });    return tip;});