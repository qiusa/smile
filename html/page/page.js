define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/page/page.html', '../../res/flashplayer/setFlash.js', '../../res/flashplayer/player/player.js', '../../javascript/base/common.js', '../../javascript/base/rest.js'], function(Regular, $, util, index, setFlash, flashPlayer, tool, rest) {    tool.regularFilterInit(); //注册过滤事件    return Regular.extend({        template: index,        title: "直播",        data: {            share: {                shareValue: '',                flashShare: '',                uniShare: '',                urlShare: '',                sStatus: '',                fStatus: '',                tStauts: '',                QQshareHref: '',                WeiboShareHref: ''            },            img: {                defaultbg: "./images/load.png",                load: "./images/loading.gif",                addsbg: "./images/adds-list-bg2.jpg",            },            deviceId: null, // 摄像头ID            playStatus: 100,            FlashStatus: 100,            //播放按钮、加载控制            control: {                pausedimg: "./images/icon_paused.png",                loadingimg: "./images/icon_loading.png",                canPraise: true,            },            // 用户相关数据            userData: {                isLogin: false,                userName: '',                userId: '',                protrait: "/live/res/wap/channel/default_protrait.png", //头像默认地址,如果请求成功，则用请求的图片            },            // 摄像头数据            cameraData: {},            // 摄像头相关信息            deviceState: {                deviceFlag: 1, // 1正常在线，2离线 -1摄像头失效            },            show: {                total: null,                isLoading: false,            },            errorMess: {                message400: false,                message401: false,            },        },        init: function() {            this.initPage()        },        /**         * 页面初始化         * @param  {[Number]} deviceid 设备id         * @return {[type]}         */        initPage: function(deviceId) {            console.info('deviceId', deviceId);            //deviceId = 163021505003894;            deviceId = 163281605300007;            if (!deviceId) {                console.error('无deviceId')                    //location.replace("#/m/square");                return;            }            var self = this;            this.data.deviceId = deviceId;            this.getCameraDetail(deviceId);        },        /**         * 重播         * @return {[type]}         */        setPlayAgain: function() {            this.flashplayerModule.setPlayAgain(this.data.deviceId);        },        /**         * 获取摄像机信息         * @param  {[Number]} deviceid 设备id         * @return {[type]}         */        getCameraDetail: function(deviceId) {            // 获取摄像头详细信息            var self = this;            var params = {                deviceId: deviceId,                relateNum: 4,            };            //获取单个公共摄像头详细信息接口√            rest.cameraDetail(params, function(data) {                self.data.cameraData = data.result;                self.cameraVerify();                self.$update();            }, function(data) {                //location.replace("#/404");                self.$update();            });        },        /**         * [是否需要验证，不需要验证时候（判断是否初始化播放器和聊天]         * @return {[type]} [description]         * needVerify:是否需要验证，1为需要，0为不需要         * focusStatus:是否已经关注，0未关注，1已关注         * verifyStatus:观看需验证申请状态 0或空表示未申请过，1表示申请过 2表示主人已经同意(实际不需要验证为2状态，该状态下focusStatus自动为1)         */        cameraVerify: function() {            var self = this;            // (不需要验证或者已经关注过的不需要任何验证)            self.initVideoPlayer(); //初始化传player模块            self.$update();        },        /**         * [播放器和弹幕模块初始化]         * @return {[type]} [description]         */        initVideoPlayer: function() {            var self = this;            //实例一个播放器            var flashplayerModule = new flashPlayer({                data: {                    deviceId: self.data.deviceId,                    regularObj: self,                }            });            flashplayerModule.$inject(document.getElementById("j-flashplayer"));            flashplayerModule.initPage();            self.flashplayerModule = flashplayerModule;        },        /**         * [显示错误]         * @param  {[type]} errorType [description]         * @return {[type]}           [description]         * 400:摄像头已离线(摄像机主人关闭直播)  401:摄像头已关闭（变为私有摄像头） 403观看需验证无权限 404 摄像机不存在或非公共         */        showErrorTip: function(errorType) {            console.error('errorType',errorType)            var errorStr = '';            if (errorType == 400) {                this.data.errorMess.message400 = true;                this.data.errorMess.message401 = false;            } else if (errorType == 401) {                this.data.errorMess.message401 = true;                this.data.errorMess.message400 = false;            } else if (errorType == 403) {                // this.data.errorMess.message400 = true;                // this.data.errorMess.message401 = false;                location.reload();                return;            } else {                this.data.errorMess.message401 = true;                this.data.errorMess.message400 = false;            }            $('#j-error-end').removeClass('u-dn');            this.$update();        },        /**         * [清除错误]         * @return {[type]} [description]         */        clearErrorTip: function() {            $('#j-error-end').addClass('u-dn');            this.$update();        }    });});