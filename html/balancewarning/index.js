define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/balancewarning/index.html', '../../javascript/widget/tip.js', '../../javascript/widget/dialog.js', '../../html/sliderbar/index.js', '../../javascript/base/const.js'], function(Regular, $, util, index, tip, dialog, sliderbar, api) {    require('../../css/balancewarning.css')    return Regular.extend({        template: '<sliderbarTpl pro = {user}>' + index + '</sliderbarTpl>',        data: {            //登陆账户密码            user: {                nick: '游客考拉',                icon: '',                type: 4 //左侧导航栏模块标识            },            show: {            }        },        init: function() {            this.initCtrol();        },        /**         * 初始化控件         */        initCtrol: function() {            //提示框            this.tip = util.tip();        },        setInfo: function(type) {            if (type == 'balance') {                this.setBalance();            } else if (type == 'phone') {                this.setPhone();            } else if (type == 'email') {                this.setEmail();            }        },        /**         * 修改余额         */        setBalance: function() {            var self = this;            //弹出框            var balanceDialog = new dialog({                data: {                    pro: {                        id: 'balanceDialog',                        singleCenter: true, //一个居中按钮                        title: '修改余额预警阈值',                        confirmBtnText: '保存',                        balance: '', //余额预警阈值                        show: {                            errmsg: ''                        },                        confirmCallback: function() {                            console.info('this.balance', this, balanceDialog)                            balanceDialog.sendBalance(this);                        }                    }                },                template: '<diglogTpl pro={pro}>\                                <p class="yj-text">请输入新的余额预警阈值</p>\                                <div class="yj-box">\                                    <input type="number" class="yj-input" placeholder="余额预警阈值" r-model={pro.balance} on-focus={pro.show.errmsg = ""}/>\                                    <span class="yj-unit">元</span>\                                </div>\                                <div class="yj-box">\                                    <div class="u-error-type" r-hide={!pro.show.errmsg}>\                                        <p class="error-icon">{pro.show.errmsg}</p>\                                    </div>\                                </div>\                            </diglogTpl>',                /**                 * 请求接口修改余额预警阈值                 * @param  {Obj}  obj     balanceDialog对象                   */                sendBalance: function(obj) {                    obj.pro.show.errmsg = '';                    if (!obj.pro.balance) {                        obj.pro.show.errmsg = '余额预警不能为空';                        obj.isClose = false; //阻止关闭                        return;                    }                    obj.isClose = true;                    ////obj.isAnimate = false; //去除隐藏动画                    util.rest('../../balance', {                        param: 'test',                        method: 'post',                        onload: function(data) {                            console.info('成功');                            balanceDialog.balanceSuccess(data, obj.pro.balance);                        },                        onerror: function(data) {                            console.info('牺牲');                            balanceDialog.balanceSuccess(data, obj.pro.balance);                        }                    })                },                /**                 * 修改余额预警阈值成功                 * @param  {JSON}   data    服务器修改成功返回数据                 * @param  {String} balance 修改的余额预警                 */                balanceSuccess: function(data, balance) {                    var balanceSuccessDialog = new dialog({                        data: {                            pro: {                                id: 'balanceSuccess',                                singleCenter: true, //一个居中按钮                                title: '修改余额预警阈值',                                confirmBtnText: '确定',                                isAnimateStart: false, //是否有开始动画                                confirmCallback: function() {                                    console.info(this);                                    //todo                                 }                            }                        },                        template: '<diglogTpl pro={pro}>\                                <span class="success-icon"></span>\                                <p class="success-text2">阈值已修改为：<span class="success-text3">' + balance + '</span></p>\                            </diglogTpl>'                    });                    balanceSuccessDialog.$inject('body');                }            });            balanceDialog.$inject('body');        },        /**         * 修改手机号         */        setPhone: function() {            var self = this,                phoneList = [12312, 22222, 3333, 22]; //手机号码列表            //弹出框            var setPhoneDialog = new dialog({                data: {                    pro: {                        id: 'setPhone',                        singleCenter: true, //一个居中按钮                        title: '设置手机号',                        confirmBtnText: '添加手机号',                        confirmCallback: function() {                            console.info(this)                            this.isAnimate = false;                            setPhoneDialog.addPhone();                        },                        show: {                            index: 0, //设置手机列表选中的序号                        },                        isAnimate: true, //是否有动画                        noBtn: phoneList.length > 4 ? false : true, //满5个时，添加按钮消失                        phoneList: phoneList                    }                },                template: '<diglogTpl pro={pro}>\                                <p class="dialog-text">已添加的手机号（最多可添加5个）：</p>\                                {#list pro.phoneList as item}\                                <div class="dialog-list-box">\                                    <div data-index={item_index} on-click={pro.show.index=item_index} class="dialog-list u-cb {item_index==pro.show.index?\'cur\':\'\'} {item_index%2==0?\'u-mgr10\':\'\'}" data-index={item_index}>\                                        <span class="u-ftl">{item}</span>\                                        <span on-click={this.delPhone(item)} class="lisy-close-icon"></span>\                                    </div>\                                </div>\                                {/list}\                            </diglogTpl>',                /**                 * 删除手机号                 * @param  {Number} phone 需要删除的手机号                 */                delPhone: function(phone) {                    console.info(999999, this);                    var confirmDialog = new dialog({                        data: {                            pro: {                                id: 'confirm',                                title: '你是否确定要删除此号码？',                                height: 'auto',                                translateY: 270,                                confirmBtnText: '确定',                                cancelBtnText: '取消',                                noBtn: true, //与前一个dialog共用一份data？                                confirmCallback: function() {                                    console.info(this)                                    this.isAnimate = false; //去除隐藏动画                                    setPhoneDialog.sendDelPhone(setPhoneDialog, phone);                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                            </diglogTpl>'                    });                    confirmDialog.$inject('body');                },                /**                 * 删除                 * @param  {Obj}  obj     setPhoneDialog对象                   * @param  {String} phone 需要删除的手机号码                 */                sendDelPhone: function(obj, phone) {                    console.warn('kkk', obj, phone)                    util.rest('../../delphone', {                        param: 'test',                        method: 'post',                        onload: function(data) {                            console.info('成功');                            setPhoneDialog.delPhoneSuccess(data, obj, phone);                        },                        onerror: function(data) {                            console.info('牺牲1');                            //todo                            setPhoneDialog.delPhoneSuccess(data, obj, phone);                        }                    });                },                /**                 * 删除号码成功                 * @param  {JSON} data    删除成功回调                 * @param  {Obj}  obj     setPhoneDialog对象                   * @param  {String} phone 需要删除的手机号码                 */                delPhoneSuccess: function(data, obj, phone) {                    util.removeArray(obj.data.pro.phoneList, phone);                    obj.data.pro.noBtn = obj.data.pro.phoneList > 4 ? false : true;                    console.info('objobjobjobj', obj)                    obj.$update();                },                /**                 * 添加手机号确定                 * @param {[type]} data [description]                 */                addPhone: function(data) {                    var setPhoneDialog = new dialog({                        data: {                            pro: {                                id: 'setPhone',                                single: false,                                singleCenter: true, //一个居中按钮                                title: '添加手机号',                                confirmBtnText: '下一步',                                confirmCallback: function() {                                    console.info(222, this);                                    setPhoneDialog.sendAddPhone(this);                                },                                reset: {                                    addPhone: '', //增加的手机号码                                    verifyCode: '', //验证码                                    timeOut: 0, //发送                                    sendMsg: '获取验证码' //文案                                },                                show: {                                    errmsg: ''                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <p class="add-dialog-text">请输入新的手机号码：</p>\                                    <div class="add-dialog-box">\                                        <input type="text" class="add-dialog-input" r-model={pro.reset.addPhone} placeholder="请输入手机" on-focus={pro.show.errmsg = ""}>\                                        <span class="icon-x" r-hide={!pro.reset.addPhone} on-click={pro.reset.addPhone=""}></span>\                                    </div>\                                    <div class="add-dialog-code-box u-cb">\                                        <input type="text" class="code-input u-ftl" placeholder="请输入收到的验证码" r-model={pro.reset.verifyCode} on-focus={pro.show.errmsg = ""}>\                                        <span id="sendPhoneCode" class="verify-btn u-ftl {pro.reset.timeOut ? \'u-white-btn-disabled\' : \'u-white-btn\'}" on-click={this.sendCode()}>{#if pro.reset.timeOut}{pro.reset.sendMsg}（{pro.reset.timeOut}）{#else}{pro.reset.sendMsg}{/if}</span>\                                        <span class="icon-x x-pos" r-hide={!pro.reset.verifyCode} on-click={pro.reset.verifyCode=""}></span>\                                    </div>\                                    <div class="add-dialog-box2">\                                        <div class="u-error-type" r-hide={!pro.show.errmsg}>\                                            <p class="error-icon">{pro.show.errmsg}</p>\                                        </div>\                                    </div>\                                 </diglogTpl>',                        /**                         * 获取验证码                         */                        sendCode: function() {                            var self2 = this;                            if (self2.data.pro.reset.timeOut) return;                            if (!util.trim(this.data.pro.reset.addPhone)) {                                self2.data.pro.show.errmsg = '手机号不能为空';                                return;                            }                            if (util.verify('phone', this.data.pro.reset.addPhone)) {                                self2.data.pro.show.errmsg = '手机号不合法';                                return;                            }                            //发送验证码请求                            util.rest(api.USER.getSmsCode, {                                param: {mobile: this.data.pro.reset.addPhone},                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        self2.data.pro.reset.sendMsg = '重新发送';                                        self2.data.pro.reset.timeOut = 60;                                        self2.timer();                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    self2.data.pro.reset.sendMsg = '重新发送';                                    self2.data.pro.reset.timeOut = 60;                                    self2.timer();                                    self2.$update();                                }                            });                        },                        /**                         * 倒数计时                         */                        timer: function() {                            var self = this;                            if (!document.getElementById('sendPhoneCode')) { //如果弹出框已销毁则停止定时                                clearTimeout(self.__timer);                                return;                            }                            self.__timer = setTimeout(function() {                                self.data.pro.reset.timeOut--;                                console.info(self.data.pro.reset.timeOut)                                if (self.data.pro.reset.timeOut === 0) {                                    clearTimeout(self.__timer);                                } else {                                    self.timer();                                }                                self.$update();                            }, 1000);                        },                        /**                         * 添加手机号发送请求                         * @param  {Obj} obj setPhoneDialog对象                         */                        sendAddPhone: function(obj) {                            if (!obj.pro.reset.addPhone) {                                obj.pro.show.errmsg = '手机号不能为空';                                obj.isClose = false;                                return;                            }                            if (util.verify('phone', obj.pro.reset.addPhone)) {                                obj.pro.show.errmsg = '手机号不合法';                                obj.isClose = false;                                return;                            }                            if (!obj.pro.reset.verifyCode) {                                obj.pro.show.errmsg = '验证码不能为空';                                obj.isClose = false;                                return;                            }                            obj.isClose = true;                            //发送添加手机号请求                            util.rest('../addphone', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setPhoneDialog.addPhoneSuccess(data, obj.pro.reset.addPhone);                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    //todo                                    setPhoneDialog.addPhoneSuccess(data, obj.pro.reset.addPhone);                                }                            });                        },                        /**                         * 添加号码成功                         * @param  {JSON} data    添加成功回调                         * @param  {String} phone 需要添加的手机号码                         */                        addPhoneSuccess: function(data, phone) {                            var hideName = util.hideName(phone, 3, 2, 8),                                addPhoneSuccessDialog = new dialog({                                    data: {                                        pro: {                                            id: 'addPhoneSuccess',                                            singleCenter: true, //一个居中按钮                                            title: '添加手机号',                                            confirmBtnText: '确定',                                            confirmCallback: function() {                                                console.info(this);                                            }                                        }                                    },                                    template: '<diglogTpl pro={pro}>\                                            <span class="success-icon"></span>\                                            <p class="success-text2">已成功添加手机号：<span class="success-text3">' + hideName + '</span></p>\                                        </diglogTpl>'                                });                            addPhoneSuccessDialog.$inject('body');                        }                    });                    setPhoneDialog.$inject('body');                }            });            setPhoneDialog.$inject('body');        },        /**         * 修改邮箱         */        setEmail: function() {            var self = this,                emailList = ['22222@163.com', '2222222@163.com', '22222111222@163.com', '342@163.com']; //邮箱码列表            //弹出框 step 1            var setEmailDialog = new dialog({                data: {                    pro: {                        id: 'setEmail',                        singleCenter: true, //一个居中按钮                        title: '设置邮箱',                        confirmBtnText: '添加邮箱',                        confirmCallback: function() {                            console.info(this)                            this.isAnimate = false;                            setEmailDialog.addEmail();                        },                        show: {                            index: 0 //设置邮箱列表选中的序号                        },                        isAnimate: true, //是否有动画                        noBtn: emailList.length > 4 ? false : true, //满5个时，添加按钮消失                        emailList: emailList                    }                },                template: '<diglogTpl pro={pro}>\                                <p class="dialog-text">已添加的邮箱（最多可添加5个）：</p>\                                {#list pro.emailList as item}\                                <div class="dialog-list-box">\                                    <div data-index={item_index} on-click={pro.show.index=item_index} class="dialog-list u-cb {item_index==pro.show.index?\'cur\':\'\'} {item_index%2==0?\'u-mgr10\':\'\'}" data-index={item_index}>\                                        <span class="u-ftl">{item}</span>\                                        <span on-click={this.delEmaik(item)} class="lisy-close-icon"></span>\                                    </div>\                                </div>\                                {/list}\                            </diglogTpl>',                /**                 * 删除邮箱                 * @param  {Number} email 需要删除的邮箱                 */                delEmaik: function(email) {                    console.info(999999, this);                    var confirmDialog = new dialog({                        data: {                            pro: {                                id: 'confirm',                                title: '你是否确定要删除此邮箱？',                                height: 'auto',                                translateY: 270,                                confirmBtnText: '确定',                                cancelBtnText: '取消',                                noBtn: true, //与前一个dialog共用一份data？                                confirmCallback: function() {                                    console.info(this)                                    this.isAnimate = false; //去除隐藏动画                                    setEmailDialog.sendDelEmail(setEmailDialog, email);                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                            </diglogTpl>'                    });                    confirmDialog.$inject('body');                },                /**                 * 删除                 * @param  {Obj}  obj     setEmailDialog对象                   * @param  {String} email 需要删除的邮箱                 */                sendDelEmail: function(obj, email) {                    console.warn('kkk', obj, email)                    util.rest('../../delemail', {                        param: 'test',                        method: 'post',                        onload: function(data) {                            console.info('成功');                            setEmailDialog.delEmailSuccess(data, obj, email);                        },                        onerror: function(data) {                            console.info('牺牲1');                            //todo                            setEmailDialog.delEmailSuccess(data, obj, email);                        }                    });                },                /**                 * 删除号码成功                 * @param  {JSON} data    删除成功回调                 * @param  {Obj}  obj     setEmailDialog对象                   * @param  {String} email 需要删除的手机号码                 */                delEmailSuccess: function(data, obj, email) {                    util.removeArray(obj.data.pro.emailList, email);                    obj.data.pro.noBtn = obj.data.pro.emailList > 4 ? false : true;                    console.info('objobjobjobj', obj)                    obj.$update();                },                /**                 * 添加邮箱确定step 2                 * @param {[type]} data [description]                 */                addEmail: function(data) {                    var addEmailDialog = new dialog({                        data: {                            pro: {                                id: 'addEmail',                                single: false,                                singleCenter: true, //一个居中按钮                                title: '添加邮箱',                                confirmBtnText: '下一步',                                confirmCallback: function() {                                    addEmailDialog.sendAddEmail(this);                                },                                reset: {                                    addEmail: '', //增加的邮箱                                    verifyImg: '', //验证码                                    timeOut: 0, //发送                                    sendMsg: '发送' //文案                                },                                show: {                                    errmsg:'',                                    imgCodeUrl: api.USER.getImageCode + '?t=' + new Date().getTime()//验证码请求时间戳                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <p class="add-dialog-text">请输入新的邮箱：</p>\                                    <div class="add-dialog-box">\                                        <input type="text" class="add-dialog-input" r-model={pro.reset.addEmail} placeholder="邮箱地址" on-focus={pro.show.errmsg = ""}/>\                                        <span class="icon-x" r-hide={!pro.reset.addEmail} on-click={pro.reset.addEmail=""}></span>\                                    </div>\                                    <div class="add-dialog-box u-cb">\                                        <input type="text" class="add-dialog-input add-dialog-input-width" placeholder="图片验证码" r-model={pro.reset.verifyCode} on-focus={pro.show.errmsg = ""}>\                                        <span class="add-dialog-verify" on-click={this.getVerifyImg()}><img src="{pro.show.imgCodeUrl}" width="74" height="29"></span>\                                        <span class="add-dialog-text2" on-click={this.getVerifyImg()}>换一个</span>\                                        <span class="icon-x x-pos" r-hide={!pro.reset.verifyCode} on-click={pro.reset.verifyCode=""}></span>\                                    </div>\                                    <div class="add-dialog-box2">\                                        <div class="u-error-type" r-hide={!pro.show.errmsg}>\                                            <p class="error-icon">{pro.show.errmsg}</p>\                                        </div>\                                    </div>\                                </diglogTpl>',                        /**                         * 获取图片验证码                         * @return {[type]} [description]                         */                        getVerifyImg: function() {                            this.data.pro.show.imgCodeUrl = api.USER.getImageCode + '?t=' + new Date().getTime();                            this.$update();                        },                        getVerifyImgSuccess: function(data) {                            console.info(99)                            addEmailDialog.data.pro.reset.verifyImg = data;                        },                        /**                         * 添加邮箱发送请求                         * @param  {Obj} obj addEmailDialog对象                         */                        sendAddEmail: function(obj) {                            if (!obj.pro.reset.addEmail) {                                obj.pro.show.errmsg = '邮箱不能为空';                                obj.isClose = false;                                return;                            }                            if (util.verify('email', obj.pro.reset.addEmail)) {                                obj.pro.show.errmsg = '邮箱格式错误';                                obj.isClose = false;                                return;                            }                            if (!obj.pro.reset.verifyCode) {                                obj.pro.show.errmsg = '验证码不能为空';                                obj.isClose = false;                                return;                            }                            obj.isClose = true;                            //发送添加邮箱请求                            util.rest('../addEmail', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setEmailDialog.addEmailVerify(data, obj.pro.reset.addEmail);                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    //todo                                    setEmailDialog.addEmailVerify(data, obj.pro.reset.addEmail);                                }                            });                        },                    });                    addEmailDialog.$inject('body');                },                /**                 * 添加邮箱 为了保护帐号安全，需要验证邮箱有效性 step 3                 * @param  {JSON} data    添加成功回调                 * @param  {String} email 需要添加的邮箱                 */                addEmailVerify: function(data, email) {                    var hideName = util.hideName(email, 3, 10, 6),                        addEmailVerifyDialog = new dialog({                            data: {                                pro: {                                    id: 'addEmailVerify',                                    singleCenter: true, //一个居中按钮                                    title: '添加邮箱',                                    confirmBtnText: '发送邮件',                                    confirmCallback: function() {                                        console.info(this);                                        setEmailDialog.addEmailConfirm(email, hideName);                                    }                                }                            },                            template: '<diglogTpl pro={pro}>\                            <p class="send-dialog-code-text1">为了保护帐号安全，需要验证邮箱有效性</p>\                            <p class="send-dialog-code-text2">点击发送邮件按钮，将会发送一封有验证码的邮件至以下邮箱<span class="send-dialog-code-text3">' + hideName + '</span></p>\                        </diglogTpl>'                        });                    addEmailVerifyDialog.$inject('body');                },                /**                 * 添加邮箱确定 step 4                 * @param {String} email    邮箱地址                 * @param {String} hideName 部分隐藏的邮箱地址                 */                addEmailConfirm: function(email, hideName) {                    var addEmailConfirmDialog = new dialog({                        data: {                            pro: {                                id: 'addEmailConfirm',                                single: false,                                singleCenter: true, //一个居中按钮                                title: '添加邮箱',                                confirmBtnText: '确定',                                confirmCallback: function() {                                    console.info(222, this);                                    addEmailConfirmDialog.sendAddEmail(this);                                },                                reset: {                                    addEmail: '', //增加的邮箱                                    verifyCode: '', //验证码                                    timeOut: 0, //发送                                    sendMsg: '发送' //文案                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <p class="add-dialog-code-text1">请输入<span class="add-dialog-code-text2">' + hideName + '</span>收到的验证码</p>\                                    <div class="add-dialog-code-box u-cb">\                                        <input type="text" class="code-input u-ftl" placeholder="请输入收到的验证码" r-model={pro.reset.verifyCode}>\                                        <span id="sendEmailCode" class="verify-btn u-ftl {pro.reset.timeOut ? \'u-white-btn-disabled\' : \'u-white-btn\'}" on-click={this.sendCode()}>{#if pro.reset.timeOut}{pro.reset.sendMsg}（{pro.reset.timeOut}）{#else}{pro.reset.sendMsg}{/if}</span>\                                    </div>\                                </diglogTpl>',                        /**                         * 获取验证码                         */                        sendCode: function() {                            var self2 = this;                            if (self2.data.pro.reset.timeOut) return;                            if (!util.trim(this.data.pro.reset.addEmail)) {                                self2.data.pro.show.errmsg = '邮箱不能为空';                                return;                            }                            if (util.verify('email', this.data.pro.reset.addEmail)) {                                self2.data.pro.show.errmsg = '邮箱格式错误';                                return;                            }                            self2.data.pro.reset.sendMsg = '重新发送';                            //发送验证码请求                            util.rest(api.USER.sendResetPasswordVerifyCode, {                                param: {email: this.data.pro.reset.addEmail},                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        self2.data.pro.reset.timeOut = 60;                                        self2.timer();                                        self2.$update();                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    self2.data.pro.reset.timeOut = 60;                                    self2.timer();                                    self2.$update();                                }                            });                        },                        /**                         * 倒数计时                         */                        timer: function() {                            var self = this;                            if (!document.getElementById('sendEmailCode')) { //如果弹出框已销毁则停止定时                                clearTimeout(self.__timer);                                return;                            }                            this.__timer = setTimeout(function() {                                self.data.pro.reset.timeOut--;                                console.info(self.data.pro.reset.timeOut)                                if (self.data.pro.reset.timeOut === 0) {                                    clearTimeout(self.__timer);                                } else {                                    self.timer();                                }                                self.$update();                            }, 1000);                        },                        /**                         * 添加邮箱发送请求                         * @param  {Obj} obj addEmailConfirmDialog对象                         */                        sendAddEmail: function(obj) {                            if (!obj.pro.reset.verifyCode) {                                self.tip.showErrorTip('验证码不能为空');                                obj.isClose = false;                                return;                            }                            obj.isClose = true;                            //发送添加邮箱请求                            util.rest('../addEmail', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setEmailDialog.addEmailSuccess(data, email, hideName);                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    //todo                                    setEmailDialog.addEmailSuccess(data, email, hideName);                                }                            });                        }                    });                    addEmailConfirmDialog.$inject('body');                },                /**                 * 添加邮箱成功 step 5                 * @param  {JSON} data    添加成功回调                 * @param {String} email    邮箱地址                 * @param {String} hideName 部分隐藏的邮箱地址                 */                addEmailSuccess: function(data, email, hideName) {                    var addEmailSuccessDialog = new dialog({                        data: {                            pro: {                                id: 'addEmailSuccess',                                singleCenter: true, //一个居中按钮                                title: '添加邮箱',                                confirmBtnText: '确定',                                confirmCallback: function() {                                    console.info(this);                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <span class="success-icon"></span>\                                    <p class="success-text2">已成功添加邮箱：<span class="success-text3">' + hideName + '</span></p>\                                </diglogTpl>'                    });                    addEmailSuccessDialog.$inject('body');                }            });            setEmailDialog.$inject('body');        }    });});