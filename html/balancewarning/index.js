define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/balancewarning/index.html', '../../javascript/3rd/anime.js', '../../javascript/3rd/clipboard.js', '../../javascript/widget/tip.js', '../../javascript/widget/dialog.js', '../../html/sliderbar/index.js'], function(Regular, $, util, index, anime, Clipboard, tip, dialog, sliderbar) {    require('../../css/balancewarning.css')    return Regular.extend({        template: '<sliderbarTpl pro = {user}>' + index + '</sliderbarTpl>',        data: {            //登陆账户密码            user: {                nick: '游客考拉',                icon: '',                type: 4//左侧导航栏模块标识            },            show: {                total: null,                isLoading: false,            }        },        init: function() {            this.initCtrol();        },        /**         * 初始化控件         */        initCtrol: function() {            //提示框            this.tip = new tip();            this.tip.$inject('body');        },        setInfo: function(type) {            if (type == 'balance') {                this.setBalance();            } else if (type == 'phone') {                this.setPhone();            } else if (type == 'email') {            }        },        /**         * 修改余额         */        setBalance: function() {            var self = this;            //弹出框            var balanceDialog = new dialog({                data: {                    pro: {                        id: 'balanceDialog',                        singleCenter: true,//一个居中按钮                        title: '修改余额预警阈值',                        confirmBtnText: '保存',                        balance: '',//余额预警阈值                        confirmCallback: function() {                            console.info('this.balance',this)                            if (!this.pro.balance) {                                self.tip.showTip('不能为空');                                this.isClose = false;//阻止关闭                                return;                            }                            this.isClose = true;                            this.isAnimate = false;                            self.sendBalance(this.pro.balance);                        }                    }                },                template: '<diglogTpl pro={pro}>\                                <p>请输入新的余额预警阈值</p>\                                <input type="number" placeholder="余额预警阈值" r-model={pro.balance}/>\                            </diglogTpl>'            });            balanceDialog.$inject('body');        },        /**         * 请求接口修改余额预警阈值         * @param  {String} balance 余额预警阈值         */        sendBalance: function(balance) {            var self = this;            util.rest('../../balance',{                param: 'test',                method: 'post',                onload: function(data) {                    console.info('成功');                    self.balanceSuccess(data);                },                onerror: function(data) {                    console.info('牺牲');                    self.balanceSuccess(data);                }            })        },        /**         * 修改余额预警阈值成功         * @param  {JSON} data 服务器修改成功返回数据         */        balanceSuccess: function(data) {            var balanceSuccessDialog = new dialog({                data: {                    pro: {                        id: 'balanceSuccess',                        singleCenter: true,//一个居中按钮                        title: '修改余额预警阈值',                        confirmBtnText: '确定',                        confirmCallback: function() {                            console.info(this)                            //self.balanceSuccess(this.addPhone);                        }                    }                },                template: '<diglogTpl pro={pro}>\                                <span>修改余额预警阈值</span>\                                <img src="" alt="" />\                                <p>阈值已修改为：<span>200元</span></p>\                            </diglogTpl>'            });            balanceSuccessDialog.$inject('body');        },        /**         * 修改手机号         */        setPhone: function() {            var self = this;            //弹出框            var setPhoneDialog = new dialog({                data: {                    pro: {                        id: 'setPhone',                        single: false,                        singleCenter: true,//一个居中按钮                        title: '添加手机号',                        confirmBtnText: '下一步',                        confirmCallback: function() {                                                        this.isAnimate = false;                            self.addPhoneVerify(this.addPhone);                        },                        cancelBtnText: '取消',                        cancelCallback: function() {},                        isAnimate: true,//是否有动画                        isFull: false,//是否添加溢出 == 5                        phoneList: [12312,22222,3333],//手机号码列表                        addPhone: ''//增加的手机号码                    }                },                template: '<diglogTpl pro={pro}>\                                <span>已添加的手机号（最多可添加5个）：</span>\                                {#list pro.phoneList as item}\                                <dl data-index={iten_index}>\                                    <dt>{item}</dt>\                                    <dd on-click={this.delPhone(item)}>x</dd>\                                </dl>\                                {/list}\                            </diglogTpl>',                delPhone: function(phone) {                    console.info(999999,this);                    this.data.pro.phoneList.push(9992222);                    self.sendDelPhone(this, phone);                }//删除手机号码            });            setPhoneDialog.$inject('body');        },         sendDelPhone: function(obj, phone) {            console.warn('kkk',obj, phone)            var self = this;            util.rest('../../delphone',{                param: 'test',                method: 'post',                onload: function(data) {                    console.info('成功');                    //self.balanceSuccess(data);                },                onerror: function(data) {                    console.info('牺牲');                    //self.balanceSuccess(data);                }            })        },        /**         * 添加手机号确定         * @param {[type]} data [description]         */        setPhone111: function(data) {            var setPhoneDialog = new dialog({                data: {                    pro: {                        id: 'setPhone',                        single: false,                        singleCenter: true,//一个居中按钮                        title: '添加手机号',                        confirmBtnText: '下一步',                        confirmCallback: function() {                            console.info(this)                            //self.setPhone(this.addPhone);                        },                        cancelBtnText: '取消',                        cancelCallback: function() {},                        isAnimate: true,//是否有动画                        isFull: false,//是否添加溢出 == 5                        addPhone: '',//增加的手机号码                        message: ''//删除的手机号码                    }                },                template: '<diglogTpl pro={pro}>\                                <span>添加手机号</span>\                                <input type="text" r-model={pro.addPhone} />\                                <input type="text" r-model={pro.message}/>\                            </diglogTpl>'            });            setPhoneDialog.$inject('body');        },                   /**         * 校验账号密码输入         */        verify: function() {            console.info(111,util.trim(this.data.user.account))            if (!util.trim(this.data.user.account)) {                return {                    error: true,                    errmsg: '邮箱不能为空！'                }            }            if (!util.trim(this.data.user.pwd)) {                return {                    error: true,                    errmsg: '密码不能为空！'                }            }            //^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$            return {                account: this.data.user.account,                pwd: this.data.user.pwd            };        }    });});