define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/balancewarning/index.html', '../../javascript/3rd/anime.js', '../../javascript/3rd/clipboard.js', '../../javascript/widget/tip.js', '../../javascript/widget/dialog.js', '../../html/sliderbar/index.js'], function(Regular, $, util, index, anime, Clipboard, tip, dialog, sliderbar) {    require('../../css/balancewarning.css')    return Regular.extend({        template: '<sliderbarTpl pro = {user}>' + index + '</sliderbarTpl>',        data: {            //登陆账户密码            user: {                nick: '游客考拉',                icon: '',                type: 4 //左侧导航栏模块标识            },            show: {                total: null,                isLoading: false,            }        },        init: function() {            this.initCtrol();        },        /**         * 初始化控件         */        initCtrol: function() {            //提示框            this.tip = new tip();            this.tip.$inject('body');        },        setInfo: function(type) {            if (type == 'balance') {                this.setBalance();            } else if (type == 'phone') {                this.setPhone();            } else if (type == 'email') {                this.setEmail();            }        },        /**         * 修改余额         */        setBalance: function() {            var self = this;            //弹出框            var balanceDialog = new dialog({                data: {                    pro: {                        id: 'balanceDialog',                        singleCenter: true, //一个居中按钮                        title: '修改余额预警阈值',                        confirmBtnText: '保存',                        balance: '', //余额预警阈值                        confirmCallback: function() {                            console.info('this.balance', this, balanceDialog)                            balanceDialog.sendBalance(this);                        }                    }                },                template: '<diglogTpl pro={pro}>\                                <p>请输入新的余额预警阈值</p>\                                <input type="number" placeholder="余额预警阈值" r-model={pro.balance}/>\                            </diglogTpl>',                /**                 * 请求接口修改余额预警阈值                 * @param  {Obj}  obj     balanceDialog对象                   */                sendBalance: function(obj) {                    if (!obj.pro.balance) {                        self.tip.showTip('余额预警不能为空1');                        obj.isClose = false; //阻止关闭                        return;                    }                    obj.isClose = true;                    obj.isAnimate = false; //去除隐藏动画                    util.rest('../../balance', {                        param: 'test',                        method: 'post',                        onload: function(data) {                            console.info('成功');                            balanceDialog.balanceSuccess(data, obj.pro.balance);                        },                        onerror: function(data) {                            console.info('牺牲');                            balanceDialog.balanceSuccess(data, obj.pro.balance);                        }                    })                },                /**                 * 修改余额预警阈值成功                 * @param  {JSON}   data    服务器修改成功返回数据                 * @param  {String} balance 修改的余额预警                 */                balanceSuccess: function(data, balance) {                    var balanceSuccessDialog = new dialog({                        data: {                            pro: {                                id: 'balanceSuccess',                                singleCenter: true, //一个居中按钮                                title: '修改余额预警阈值',                                confirmBtnText: '确定',                                isAnimateStart: false, //是否有开始动画                                confirmCallback: function() {                                    console.info(this);                                    //todo                                 }                            }                        },                        template: '<diglogTpl pro={pro}>\                                <span>修改余额预警阈值</span>\                                <img src="" alt="" />\                                <p>阈值已修改为：<span>' + balance + '</span></p>\                            </diglogTpl>'                    });                    balanceSuccessDialog.$inject('body');                }            });            balanceDialog.$inject('body');        },        /**         * 修改手机号         */        setPhone: function() {            var self = this,                phoneList = [12312, 22222, 3333, 22, 34]; //手机号码列表            //弹出框            var setPhoneDialog = new dialog({                data: {                    pro: {                        id: 'setPhone',                        singleCenter: true, //一个居中按钮                        title: '设置手机号',                        confirmBtnText: '添加手机号',                        confirmCallback: function() {                            console.info(this)                            this.isAnimate = false;                            setPhoneDialog.addPhone();                        },                        isAnimate: true, //是否有动画                        noBtn: phoneList.length > 4 ? false : true, //满5个时，添加按钮消失                        phoneList: phoneList                    }                },                template: '<diglogTpl pro={pro}>\                                <span>已添加的手机号（最多可添加5个）：</span>\                                {#list pro.phoneList as item}\                                <dl data-index={iten_index}>\                                    <dt>{item}</dt>\                                    <dd on-click={this.delPhone(item)}>x</dd>\                                </dl>\                                {/list}\                            </diglogTpl>',                /**                 * 删除手机号                 * @param  {Number} phone 需要删除的手机号                 */                delPhone: function(phone) {                    console.info(999999, this);                    var confirmDialog = new dialog({                        data: {                            pro: {                                id: 'confirm',                                title: ' ',                                confirmBtnText: '确定',                                cancelBtnText: '取消',                                noBtn: true, //与前一个dialog共用一份data？                                confirmCallback: function() {                                    console.info(this)                                    this.isAnimate = false; //去除隐藏动画                                    setPhoneDialog.sendDelPhone(setPhoneDialog, phone);                                    //this.isAnimate = false;                                    //self.addPhone();                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                <span>你是否确定要删除此号码？</span>\                            </diglogTpl>'                    });                    confirmDialog.$inject('body');                },                /**                 * 删除                 * @param  {Obj}  obj     setPhoneDialog对象                   * @param  {String} phone 需要删除的手机号码                 */                sendDelPhone: function(obj, phone) {                    console.warn('kkk', obj, phone)                    util.rest('../../delphone', {                        param: 'test',                        method: 'post',                        onload: function(data) {                            console.info('成功');                            setPhoneDialog.delPhoneSuccess(data, obj, phone);                        },                        onerror: function(data) {                            console.info('牺牲1');                            //todo                            setPhoneDialog.delPhoneSuccess(data, obj, phone);                        }                    });                },                /**                 * 删除号码成功                 * @param  {JSON} data    删除成功回调                 * @param  {Obj}  obj     setPhoneDialog对象                   * @param  {String} phone 需要删除的手机号码                 */                delPhoneSuccess: function(data, obj, phone) {                    util.removeArray(obj.data.pro.phoneList, phone);                    obj.data.pro.noBtn = obj.data.pro.phoneList > 4 ? false : true;                    console.info('objobjobjobj', obj)                    obj.$update();                },                /**                 * 添加手机号确定                 * @param {[type]} data [description]                 */                addPhone: function(data) {                    var setPhoneDialog = new dialog({                        data: {                            pro: {                                id: 'setPhone',                                single: false,                                singleCenter: true, //一个居中按钮                                title: '添加手机号',                                confirmBtnText: '下一步',                                confirmCallback: function() {                                    console.info(222, this);                                    setPhoneDialog.sendAddPhone(this);                                },                                reset: {                                    addPhone: '', //增加的手机号码                                    verifyCode: '', //验证码                                    timeOut: 0, //发送                                    sendMsg: '发送' //文案                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <span>添加手机号</span>\                                    <div class="m-input">\                                        <input type="text" r-model={pro.reset.addPhone} />\                                    </div>\                                    <div class="m-input">\                                        <input type="text" class="ui-input verify-input" placeholder="请输入收到的验证码" r-model={pro.reset.verifyCode}>\                                        <span id="sendPhoneCode" class="send-btn" on-click={this.sendCode()}>{#if pro.reset.timeOut}{pro.reset.sendMsg}（{pro.reset.timeOut}）{#else}{pro.reset.sendMsg}{/if}</span>\                                    </div>\                                </diglogTpl>',                        /**                         * 获取验证码                         */                        sendCode: function() {                            var self = this;                            if (self.data.pro.reset.timeOut) return;                            self.data.pro.reset.sendMsg = '重新发送';                            //发送验证码请求                            util.rest('../sendCode', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        self.data.pro.reset.timeOut = 60;                                        self.timer();                                        self.$update();                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    self.data.pro.reset.timeOut = 60;                                    self.timer();                                    self.$update();                                }                            });                        },                        /**                         * 倒数计时                         */                        timer: function() {                            var self = this;                            if (!document.getElementById('sendPhoneCode')) { //如果弹出框已销毁则停止定时                                clearTimeout(self.__timer);                                return;                            }                            this.__timer = setTimeout(function() {                                self.data.pro.reset.timeOut--;                                console.info(self.data.pro.reset.timeOut)                                if (self.data.pro.reset.timeOut === 0) {                                    clearTimeout(self.__timer);                                } else {                                    self.timer();                                }                                self.$update();                            }, 1000);                        },                        /**                         * 添加手机号发送请求                         * @param  {Obj} obj setPhoneDialog对象                         */                        sendAddPhone: function(obj) {                            if (!obj.pro.reset.addPhone) {                                self.tip.showTip('手机号不能为空');                                obj.isClose = false;                                return;                            }                            if (!obj.pro.reset.verifyCode) {                                self.tip.showTip('验证码不能为空');                                obj.isClose = false;                                return;                            }                            obj.isClose = true;                            //发送添加手机号请求                            util.rest('../addphone', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setPhoneDialog.addPhoneSuccess(data, obj.pro.reset.addPhone);                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    //todo                                    setPhoneDialog.addPhoneSuccess(data, obj.pro.reset.addPhone);                                }                            });                        },                        /**                         * 添加号码成功                         * @param  {JSON} data    添加成功回调                         * @param  {String} phone 需要添加的手机号码                         */                        addPhoneSuccess: function(data, phone) {                            var hideName = util.hideName(phone, 3, 2, 8),                                addPhoneSuccessDialog = new dialog({                                    data: {                                        pro: {                                            id: 'addPhoneSuccess',                                            singleCenter: true, //一个居中按钮                                            title: '添加手机号',                                            confirmBtnText: '确定',                                            confirmCallback: function() {                                                console.info(this);                                            }                                        }                                    },                                    template: '<diglogTpl pro={pro}>\                                    <span>修改余额预警阈值</span>\                                    <img src="" alt="" />\                                    <p>已成功添加手机号：<span>' + hideName + '</span></p>\                                </diglogTpl>'                                });                            addPhoneSuccessDialog.$inject('body');                        }                    });                    setPhoneDialog.$inject('body');                }            });            setPhoneDialog.$inject('body');        },        /**         * 修改手机号         */        setEmail: function() {            var self = this,                emailList = ['12312@qq.com', '22222@163.com', '2222222@163.com', '22222111222@163.com', '342@163.com']; //手机号码列表            //弹出框            var setEmailDialog = new dialog({                data: {                    pro: {                        id: 'setEmail',                        singleCenter: true, //一个居中按钮                        title: '设置邮箱',                        confirmBtnText: '添加邮箱',                        confirmCallback: function() {                            console.info(this)                            this.isAnimate = false;                            setEmailDialog.addEmail();                        },                        isAnimate: true, //是否有动画                        noBtn: emailList.length > 4 ? false : true, //满5个时，添加按钮消失                        emailList: emailList                    }                },                template: '<diglogTpl pro={pro}>\                                <span>已添加的邮箱（最多可添加5个）：</span>\                                {#list pro.emailList as item}\                                <dl data-index={iten_index}>\                                    <dt>{item}</dt>\                                    <dd on-click={this.delEmaik(item)}>x</dd>\                                </dl>\                                {/list}\                            </diglogTpl>',                /**                 * 删除手机号                 * @param  {Number} email 需要删除的手机号                 */                delEmaik: function(email) {                    console.info(999999, this);                    var confirmDialog = new dialog({                        data: {                            pro: {                                id: 'confirm',                                title: ' ',                                confirmBtnText: '确定',                                cancelBtnText: '取消',                                noBtn: true, //与前一个dialog共用一份data？                                confirmCallback: function() {                                    console.info(this)                                    this.isAnimate = false; //去除隐藏动画                                    setEmailDialog.sendDelEmail(setEmailDialog, email);                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                <span>你是否确定要删除此邮箱？</span>\                            </diglogTpl>'                    });                    confirmDialog.$inject('body');                },                /**                 * 删除                 * @param  {Obj}  obj     setEmailDialog对象                   * @param  {String} email 需要删除的邮箱                 */                sendDelEmail: function(obj, email) {                    console.warn('kkk', obj, email)                    util.rest('../../delemail', {                        param: 'test',                        method: 'post',                        onload: function(data) {                            console.info('成功');                            setEmailDialog.delEmailSuccess(data, obj, email);                        },                        onerror: function(data) {                            console.info('牺牲1');                            //todo                            setEmailDialog.delEmailSuccess(data, obj, email);                        }                    });                },                /**                 * 删除号码成功                 * @param  {JSON} data    删除成功回调                 * @param  {Obj}  obj     setEmailDialog对象                   * @param  {String} email 需要删除的手机号码                 */                delEmailSuccess: function(data, obj, email) {                    util.removeArray(obj.data.pro.emailList, email);                    obj.data.pro.noBtn = obj.data.pro.emailList > 4 ? false : true;                    console.info('objobjobjobj', obj)                    obj.$update();                },                /**                 * 添加邮箱确定                 * @param {[type]} data [description]                 */                addEmail: function(data) {                    var setEmailDialog = new dialog({                        data: {                            pro: {                                id: 'setEmail',                                single: false,                                singleCenter: true, //一个居中按钮                                title: '添加邮箱',                                confirmBtnText: '下一步',                                confirmCallback: function() {                                    setEmailDialog.sendAddEmail(this);                                },                                reset: {                                    addEmail: '', //增加的邮箱                                    verifyImg: '', //验证码                                    timeOut: 0, //发送                                    sendMsg: '发送' //文案                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <span>添加邮箱</span>\                                    <p>请输入新的邮箱：</p>\                                    <div class="m-input">\                                        <input type="text" r-model={pro.reset.addEmail} placeholder="邮箱地址"/>\                                    </div>\                                    <div class="m-input">\                                        <input type="text" class="ui-input verify-input" placeholder="图片验证码" r-model={pro.reset.verifyCode}>\                                        <span class="verify-img" style="background: url({pro.reset.verifyImg} no-repeat;background-size: contain;" on-click={this.getVerifyImg()}>图片验证码</span>\                                    </div>\                                </diglogTpl>',                        /**                         * 获取图片验证码                         * @return {[type]} [description]                         */                        getVerifyImg: function() {                            //发送登录请求                            util.rest('../getVerifyImg', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setEmailDialog.getVerifyImgSuccess(data);                                        self.$update();                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    setEmailDialog.getVerifyImgSuccess(data);                                    self.tip.showError('获取验证失败，请点击重试');                                }                            })                        },                        getVerifyImgSuccess: function(data) {                            console.info(99)                            setEmailDialog.data.pro.reset.verifyImg = data;                        },                        /**                         * 添加邮箱发送请求                         * @param  {Obj} obj setEmailDialog对象                         */                        sendAddEmail: function(obj) {                            if (!obj.pro.reset.addEmail) {                                self.tip.showTip('邮箱不能为空');                                obj.isClose = false;                                return;                            }                            if (!obj.pro.reset.verifyCode) {                                self.tip.showTip('验证码不能为空');                                obj.isClose = false;                                return;                            }                            obj.isClose = true;                            //发送添加邮箱请求                            util.rest('../addEmail', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setEmailDialog.addEmailSuccess(data, obj.pro.reset.addEmail);                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    //todo                                    setEmailDialog.addEmailSuccess(data, obj.pro.reset.addEmail);                                }                            });                        },                        /**                         * 添加号码成功                         * @param  {JSON} data    添加成功回调                         * @param  {String} email 需要添加的邮箱                         */                        addEmailSuccess: function(data, email) {                            var hideName = util.hideName(email, 3, 2, 8),                                addEmailSuccessDialog = new dialog({                                    data: {                                        pro: {                                            id: 'addEmailSuccess',                                            singleCenter: true, //一个居中按钮                                            title: '添加邮箱',                                            confirmBtnText: '确定',                                            confirmCallback: function() {                                                console.info(this);                                            }                                        }                                    },                                    template: '<diglogTpl pro={pro}>\                                    <span>修改余额预警阈值</span>\                                    <img src="" alt="" />\                                    <p>已成功添加邮箱：<span>' + hideName + '</span></p>\                                </diglogTpl>'                                });                            addEmailSuccessDialog.$inject('body');                        }                    });                    setEmailDialog.$inject('body');                },                /**                 * 添加邮箱确定                 * @param {[type]} data [description]                 */                addEmailConfirm: function(data) {                    var setEmailDialog = new dialog({                        data: {                            pro: {                                id: 'setEmail',                                single: false,                                singleCenter: true, //一个居中按钮                                title: '添加邮箱',                                confirmBtnText: '下一步',                                confirmCallback: function() {                                    console.info(222, this);                                    setEmailDialog.sendAddEmail(this);                                },                                reset: {                                    addEmail: '', //增加的邮箱                                    verifyCode: '', //验证码                                    timeOut: 0, //发送                                    sendMsg: '发送' //文案                                }                            }                        },                        template: '<diglogTpl pro={pro}>\                                    <span>添加邮箱</span>\                                    <div class="m-input">\                                        <input type="text" r-model={pro.reset.addEmail} />\                                    </div>\                                    <div class="m-input">\                                        <input type="text" class="ui-input verify-input" placeholder="请输入收到的验证码" r-model={pro.reset.verifyCode}>\                                        <span id="sendEmailCode" class="send-btn" on-click={this.sendCode()}>{#if pro.reset.timeOut}{pro.reset.sendMsg}（{pro.reset.timeOut}）{#else}{pro.reset.sendMsg}{/if}</span>\                                    </div>\                                </diglogTpl>',                        /**                         * 获取验证码                         */                        sendCode: function() {                            var self = this;                            if (self.data.pro.reset.timeOut) return;                            self.data.pro.reset.sendMsg = '重新发送';                            //发送验证码请求                            util.rest('../sendCode', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        self.data.pro.reset.timeOut = 60;                                        self.timer();                                        self.$update();                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    self.data.pro.reset.timeOut = 60;                                    self.timer();                                    self.$update();                                }                            });                        },                        /**                         * 倒数计时                         */                        timer: function() {                            var self = this;                            if (!document.getElementById('sendEmailCode')) { //如果弹出框已销毁则停止定时                                clearTimeout(self.__timer);                                return;                            }                            this.__timer = setTimeout(function() {                                self.data.pro.reset.timeOut--;                                console.info(self.data.pro.reset.timeOut)                                if (self.data.pro.reset.timeOut === 0) {                                    clearTimeout(self.__timer);                                } else {                                    self.timer();                                }                                self.$update();                            }, 1000);                        },                        /**                         * 添加邮箱发送请求                         * @param  {Obj} obj setEmailDialog对象                         */                        sendAddEmail: function(obj) {                            if (!obj.pro.reset.addEmail) {                                self.tip.showTip('邮箱不能为空');                                obj.isClose = false;                                return;                            }                            if (!obj.pro.reset.verifyCode) {                                self.tip.showTip('验证码不能为空');                                obj.isClose = false;                                return;                            }                            obj.isClose = true;                            //发送添加邮箱请求                            util.rest('../addEmail', {                                param: 'data',                                method: 'post',                                onload: function(data) {                                    console.info('成功');                                    if (data && typeof data != undefined) {                                        setEmailDialog.addEmailSuccess(data, obj.pro.reset.addEmail);                                    }                                },                                onerror: function(data) {                                    console.info('牺牲');                                    //todo                                    setEmailDialog.addEmailSuccess(data, obj.pro.reset.addEmail);                                }                            });                        },                        /**                         * 添加号码成功                         * @param  {JSON} data    添加成功回调                         * @param  {String} email 需要添加的邮箱                         */                        addEmailSuccess: function(data, email) {                            var hideName = util.hideName(email, 3, 2, 8),                                addEmailSuccessDialog = new dialog({                                    data: {                                        pro: {                                            id: 'addEmailSuccess',                                            singleCenter: true, //一个居中按钮                                            title: '添加邮箱',                                            confirmBtnText: '确定',                                            confirmCallback: function() {                                                console.info(this);                                            }                                        }                                    },                                    template: '<diglogTpl pro={pro}>\                                    <span>修改余额预警阈值</span>\                                    <img src="" alt="" />\                                    <p>已成功添加邮箱：<span>' + hideName + '</span></p>\                                </diglogTpl>'                                });                            addEmailSuccessDialog.$inject('body');                        }                    });                    setEmailDialog.$inject('body');                }            });            setEmailDialog.$inject('body');        },        /**         * 校验账号密码输入         */        verify: function() {            console.info(111, util.trim(this.data.user.account))            if (!util.trim(this.data.user.account)) {                return {                    error: true,                    errmsg: '邮箱不能为空！'                }            }            if (!util.trim(this.data.user.pwd)) {                return {                    error: true,                    errmsg: '密码不能为空！'                }            }            //^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$            return {                account: this.data.user.account,                pwd: this.data.user.pwd            };        }    });});