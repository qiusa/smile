define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/register/index.html', '../../javascript/widget/tip.js', '../../javascript/base/const.js', '../../javascript/3rd/cookie.js',  '../../javascript/3rd/md5.js', '../../html/loginnav/index.js'], function(Regular, $, util, index, tip, api, cookie, md5) {    require('../../css/register.css');    return Regular.extend({        template: '<loginNav>' + index + '</loginNav>',        data: {            //注册信息            user: {                email: '',                pwd: '',                pwdSecond: '',                company: '',                phone: '',                message: '',                verifyCode: '',            },            //错误信息            error: {                emailError: {                    msg: '',                    code: 0                },                pwdError: '',                pwdSecondError: '',                companyError: '',                phoneError: '',                messageError: '',                verifyCodeError: ''            },            show: {                check: true,                sendMsg: '获取验证码',                timeOut: 0, //定时                imgCodeUrl: api.USER.getImageCode + '?t=' + new Date().getTime()//图片验证码地址            }        },        init: function() {            this.initCtrol();        },        /**         * 初始化控件         */        initCtrol: function() {            //提示框            this.tip = util.tip();        },        /**         * 发送短信验证码         */        sendCode: function() {            if (this.data.show.timeOut) return;            var self = this;            //校验手机号码            if (this.verifyPhone()) {                return            }            util.rest(api.USER.sendVerifyCode, {                param: {mobile: self.data.user.phone},                method: 'post',                onload: function() {                    console.info('成功');                    self.data.show.sendMsg = '重新发送';                    self.data.show.timeOut = 60;                    self.timer();                },                onerror: function() {                    console.info('牺牲');                    self.data.error.messageError = '短信发送失败，请重试';                    self.$update();                }            });        },        /**         * 倒数计时         */        timer: function() {            var self = this;            self.__timer = setTimeout(function() {                self.data.show.timeOut--;                console.info(self.data.show.timeOut)                if (self.data.show.timeOut === 0) {                    clearTimeout(self.__timer);                    self.data.show.sendMsg = '重新发送'; //发送成功开始计时                } else {                    self.timer();                }                self.$update();            }, 1000);        },        /**         * 获取图片验证码         * @return {[type]} [description]         */        getVerifyImg: function() {            this.data.show.imgCodeUrl = api.USER.getImageCode + '?t=' + new Date().getTime();            this.$update();        },        /**         * 同意协议事件         */        checkAgree: function() {            this.data.show.check = this.data.show.check ? false : true;            this.data.error.agreeError = this.data.show.check ? '' : '您还未接受《服务条款》';            this.$update();            console.info(this.data.error.agreeError)        },        /**         * 注册事件         */        register: function() {            var self = this,                result = this.verify();            console.info(result)            if (result == true) {                return;            }            util.rest(api.USER.register, {                param: result,                method: 'post',                onload: function(data) {                    console.info('成功', data);                    //设置token到cookie 后续调用接口使用                    if (data.token && data.uid) {                        cookie.set({                            token: data.token,                            uid: data.uid                        });                        //注册成功后登录到账户总览页面                        window.location.href = './accountoverview.html';                    }                },                onerror: function(data) {                    console.info('牺牲',data);                    if (data.code == 8) {                        self.data.error.verifyCodeError = '图片验证码错误';                        self.data.show.imgCodeUrl = api.USER.getImageCode + '?t=' + new Date().getTime();                        self.$update();                    } else if (data.code == 9) {                        self.data.error.messageError = '短信验证码错误';                        self.$update();                    } else {                        self.tip.showErrorTip(data.message || '操作失败，请稍候重试');                    }                    self.data.show.imgCodeUrl = api.USER.getImageCode + '?t=' + new Date().getTime();                    self.$update();                }            });        },        /**         * 校验邮箱         * @param  {bool} bool true: 还需要额外跟服务器校验邮箱是否被注册         */        verifyEmail: function(bool) {            if (bool && !util.trim(this.data.user.email)) { //如果未填写且移开事件触发则不校验                this.data.error.emailError = {                    msg: '',                    code: 0                };                return;            }            var verifyResult = false,                self = this;            this.data.error.emailError = {                msg: '',                code: 0            };            if (!util.trim(this.data.user.email)) {                this.data.error.emailError.msg = '邮箱不能为空';                this.data.error.emailError.code = 1;                verifyResult = true;            } else if (util.verify('email', this.data.user.email)) {                this.data.error.emailError.msg = '邮箱格式错误';                this.data.error.emailError.code = 2;                verifyResult = true;            }            if (bool && !verifyResult) {                util.rest(api.USER.checkIfEmailExists, {                    param: {email: self.data.user.email},                    method: 'post',                    onload: function(data) {                        console.info('成功')                        if (!data.exist) {                            self.data.error.emailError = {                                msg: '',                                code: 4                            };                        } else {                            self.data.error.emailError = {                                msg: '已注册邮箱',                                code: 3                            };                        }                        self.$update();                    },                    onerror: function() {                        console.info('牺牲')                        self.data.error.emailError = {                            msg: '校验失败，请稍后重试',                            code: 3                        };                        self.$update();                    }                })            }            this.$update();            return verifyResult;        },        /**         * 校验密码         * @param  {bool} bool true: blur事件触发         */        verifyPwd: function(bool) {            if (bool && !util.trim(this.data.user.pwd)) { //如果未填写且移开事件触发则不校验                this.data.error.pwdError = '';                return;            }            var verifyResult = false;            //校验密码            this.data.error.pwdError = '';            if (!util.trim(this.data.user.pwd)) {                this.data.error.pwdError = '密码不能为空';                verifyResult = true;            } else if (util.trim(this.data.user.pwd) && util.trim(this.data.user.pwd).length != this.data.user.pwd.length) {                this.data.error.pwdError = '密码前后不能有空格';                verifyResult = true;            } else if (this.data.user.pwd.length < 6 || this.data.user.pwd.length > 16) {                this.data.error.pwdError = '请输入6-16位密码';                verifyResult = true;            } else if (util.verify('pwd', this.data.user.pwd)) {                this.data.error.pwdError = '密码需包含字母，数字，字符中至少两种格式';                verifyResult = true;            }            this.$update();            return verifyResult;        },        /**         * 校验企业名称         * @param  {bool} bool true: blur事件触发         */        verifyCompany: function(bool) {            if (bool && !util.trim(this.data.user.company)) { //如果未填写且移开事件触发则不校验                this.data.error.companyError = '';                return;            }            var verifyResult = false,                regCh = /[^\u4E00-\u9FA5]/g; //匹配非汉字            //校验企业名称            this.data.error.companyError = '';            if (!util.trim(this.data.user.company)) {                this.data.error.companyError = '企业名称不能为空';                verifyResult = true;            } else if (this.data.user.company.replace(regCh, '').length < 2) {                this.data.error.companyError = '请输入完整的企业名';                verifyResult = true;            }            this.$update();            return verifyResult;        },        /**         * 校验手机          * @param  {bool} bool true: blur事件触发         */        verifyPhone: function(bool) {            if (bool && !util.trim(this.data.user.phone)) { //如果未填写且移开事件触发则不校验                this.data.error.phoneError = '';                return;            }            var verifyResult = false;            //校验手机号码            this.data.error.phoneError = '';            if (!util.trim(this.data.user.phone)) {                this.data.error.phoneError = '手机号码不能为空';                verifyResult = true;            } else if (util.verify('phone', this.data.user.phone)) {                this.data.error.phoneError = '请输入正确的手机号码';                verifyResult = true;            }            this.$update();            return verifyResult;        },        /**         * 校验二次密码         * @param  {bool} bool true: blur事件触发         */        verifyPwdSecond: function(bool) {            if (bool && !util.trim(this.data.user.pwdSecond)) { //如果未填写且移开事件触发则不校验                this.data.error.pwdSecondError = '';                return;            }            var verifyResult = false;            //校验二次密码            this.data.error.pwdSecondError = '';            if (!util.trim(this.data.user.pwdSecond)) {                this.data.error.pwdSecondError = '确认密码不能为空';                verifyResult = true;            } else if (this.data.user.pwd !== this.data.user.pwdSecond) {                this.data.error.pwdSecondError = '密码不一致';                verifyResult = true;            }            this.$update();            return verifyResult;        },        /**         * 校验短信验证码         * @param  {bool} bool true: blur事件触发         */        verifyMessage: function(bool) {            if (bool && !util.trim(this.data.user.message)) { //如果未填写且移开事件触发则不校验                this.data.error.messageError = '';                return;            }            var verifyResult = false;            this.data.user.messageError = '';            if (!util.trim(this.data.user.message)) {                this.data.error.messageError = '短信验证码不能为空';                verifyResult = true;            }            this.$update();            return verifyResult;        },        /**         * 校验图片验证码         * @param  {bool} bool true: blur事件触发         */        verifyVerifyCode: function(bool) {            if (bool && !util.trim(this.data.user.message)) { //如果未填写且移开事件触发则不校验                this.data.error.verifyCodeError = '';                return;            }            var verifyResult = false;            if (!util.trim(this.data.user.verifyCode)) {                this.data.error.verifyCodeError = '图片验证码不能为空';                verifyResult = true;            }            this.$update();            return verifyResult;        },        /**         * 校验注册输入         */        verify: function() {            console.info(111, util.trim(this.data.user.email));            var verifyResult = false; //是否校验通过            //reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,16}$/;//6-16位的数字、字母组合密码             //校验邮箱            if (this.verifyEmail()) {                verifyResult = true;            }            //校验密码            if (this.verifyPwd()) {                verifyResult = true;            }            //校验二次密码            if (this.verifyPwdSecond()) {                verifyResult = true;            }            //校验企业名称            if (this.verifyCompany()) {                verifyResult = true;            }            //校验手机号码            if (this.verifyPhone()) {                verifyResult = true;            }            //校验短信验证码            if (this.verifyMessage()) {                verifyResult = true;            }            //校验图片验证码            if (this.verifyVerifyCode()) {                verifyResult = true;            }            //校验是否同意协议            this.data.error.agreeError = '';            if (!this.data.show.check) {                this.data.error.agreeError = '您还未同意《服务条款》';                verifyResult = true;            }            if (verifyResult) {                this.$update();                return verifyResult;            } else {                return {                    email: util.trim(this.data.user.email),                    password: md5(util.trim(this.data.user.pwd)),                    company: util.trim(this.data.user.company),                    mobile: util.trim(this.data.user.phone),                    smscode: util.trim(this.data.user.message),                    imagecode: util.trim(this.data.user.verifyCode),                    agreement: true                };            }        }    });});