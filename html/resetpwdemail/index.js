define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/resetpwdemail/index.html', '../../javascript/widget/tip.js', '../../javascript/widget/dialog.js', '../../javascript/base/const.js', '../../javascript/3rd/cookie.js', '../../javascript/3rd/base64.js', '../../html/loginnav/index.js'], function(Regular, $, util, index, tip, dialog, api, cookie, Base64) {    require('../../css/resetpwdemail.css')    return Regular.extend({        template: '<loginNav>' + index + '</loginNav>',        data: {            reset: {                account:''            }        },        init: function() {            if (!cookie.get('mtmp')) {//没有设置账户信息cookie则跳转重置密码页面                window.location.href = './resetpwd.html';                return;            }            this.initCtrol();            this.data.reset.account = Base64.decode(cookie.get('etmp'));            this.$update();        },        /**         * 初始化控件         */        initCtrol: function() {            //提示框            this.tip = util.tip();        },        /**         * 发送邮件按钮点击         */        sendEmail: function() {            var self = this;            if (!self.data.reset.account) {                self.tip.showErrorTip('无效链接');                return;            }            //发送邮箱请求            util.rest(api.USER.sendVerifyCode, {                param: {email: this.data.reset.account},                method: 'post',                onload: function(data) {                    console.info('成功',data);                    window.location.href = './resetpwdcode.html?type=email';                },                onerror: function(data) {                    console.info('牺牲',data);                    self.tip.showErrorTip('操作失败，请稍后重试');                }            })        },        /**         * 浏览器后退         */        goBack: function() {            history.back();        }    });});