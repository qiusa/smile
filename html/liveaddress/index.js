define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/liveaddress/index.html', '../../javascript/3rd/clipboard.js', '../../javascript/widget/tip.js', '../../javascript/widget/dialog.js', '../../html/sliderbar/index.js', '../../javascript/3rd/base64.js', '../../javascript/base/const.js', '../../javascript/3rd/cookie.js', '../../javascript/3rd/md5.js'], function(Regular, $, util, index, Clipboard, tip, dialog, sliderbar, Base64, api, cookie, md5) {    require('../../css/liveaddress.css')    return Regular.extend({        template: '<sliderbarTpl pro = {user}>' + index + '</sliderbarTpl>',        data: {            //登陆账户密码            user: {                nick: '',                icon: '',                type: 2 //左侧导航栏模块标识            },            config: {                title: '', //标题                snapshotUrl: '', //封面图                description: '', //简介                isEncrypt: 0,                password: '', //播放密码                companyId: '',                 deviceId: '', // 设备id                cameraName: '', //设备名称                delFlag: 1, //播放状态                pageId: '',                url: 'http://localhost:9999/play.html?id=' //直播地址            },            show: {                check: false, //直播设置选中                radioCheck: false, //播放密码是否有                upload: {                    status: false, //上传状态                    progress: 10 //上传进度                },                loadStatus: false, //加载数据状态                saveStatus: false //保存状态            },            error: {                titleError: '',                infoError: '',                pwdError: ''            }        },        init: function() {            this.initCtrol();            this.render();        },        /**         * 初始化控件         */        initCtrol: function() {            var self = this;            //提示框            this.tip = util.tip();            //复制            var clipboard = new Clipboard('#copyAddress');            clipboard.on('success', function(e) {                self.tip.showSuccessTip('复制成功');                e.clearSelection();            });            clipboard.on('error', function(e) {                self.tip.showErrorTip('复制失败');            });        },        render: function() {            this.data.config.deviceId = Base64.decode(util.getQueryString('id'));            this.data.config.cameraName = Base64.decode(util.getQueryString('name'));            //this.data.config.url = this.data.config.url + util.getQueryString('id');            console.info(this.data.config.deviceId);            var self = this;            util.rest(api.LIVEWEB.get, {                param: {                    deviceId: this.data.config.deviceId                },                method: 'post',                onload: function(data) {                    console.info('成功', data);                    if (data.pageId) {                        self.initData(data);                    } else {                        //第一次进入时无pageId 手动调一把保存生成pageId                        self.save('save', true);                    }                },                onerror: function(data) {                    console.info('牺牲', data);                }            })        },        /**         * 赋值         * @param  {JSON} data 数据         */        initData: function(data) {            this.data.config.title = data.title;            this.data.config.pageId = data.pageId;            this.data.config.snapshotUrl = data.snapshotUrl;            this.data.config.description = data.description;            this.data.config.isEncrypt = data.isEncrypt;            this.data.config.password = data.isEncrypt ? '123456' : '';            this.data.config.delFlag = data.delFlag;            this.data.config.url = this.data.config.url + data.pageId;            this.data.show.check = data.delFlag ? false : true;            this.$update();            console.info(99999,this.data)        },        /**         * 暂停/恢复直播         * delFlag  0： 开启；1：关闭         */        playStatus: function() {            if (this.data.show.loadStatus) {                return;            }            var self = this,                url = '',                param = {};            if (!this.data.config.delFlag) {                url = api.LIVEWEB.pause;                param = {                    deviceId: this.data.config.deviceId                }            } else {                url = api.LIVEWEB.addOrUpdate;                param = this.verify();                param.delFlag = 0;            }            this.data.show.loadStatus = true;            util.rest(url, {                param: param,                method: 'post',                onload: function(data) {                    console.info('成功', data);                    self.tip.showSuccessTip('设置成功');                    self.data.show.loadStatus = false;                    self.data.config.delFlag = self.data.config.delFlag ? false : true;                    self.$update();                },                onerror: function(data) {                    console.info('牺牲', data);                    self.tip.showErrorTip('设置失败，请稍后重试');                    self.data.show.loadStatus = false;                    self.data.config.delFlag = self.data.config.delFlag ? false : true;                    self.$update();                }            })        },        /**         * 上传封面图         */        upload: function() {            if (!this.data.show.check || this.data.config.delFlag) {                return;            }            document.getElementById('file').click()        },        /**         * 上传分享图片         */        imgChange: function(event) {            var fd = new FormData(),                file = event.origin.files[0],                suffix = '',                self = this;                console.info('fi11le',file)            if (!file) {                return;            }            if (file.name) {                suffix = /\.[^\.]+$/.exec(file.name)[0];                console.info(suffix)                if (!(suffix == '.png' || suffix == '.jpg')) {                    self.tip.showErrorTip('上传失败，请上传.jpg .png格式的文件');                    return;                }            }            if (file.size) {                if (file.size / 1024 > 200) {//大小不超过200k                    self.tip.showErrorTip('上传失败，请上传200K以内的文件');                    return;                }            }            console.info('file',file)            self.data.show.upload.status = true;//显示进度条            self.$update();            fd.append('file', file);            var xhrOnProgress = function(fun) {                xhrOnProgress.onprogress = fun; //绑定监听                //使用闭包实现监听绑                return function() {                    //通过$.ajaxSettings.xhr();获得XMLHttpRequest对象                    var xhr = $.ajaxSettings.xhr();                    //判断监听函数是否为函数                    if (typeof xhrOnProgress.onprogress !== 'function')                        return xhr;                    //如果有监听函数并且xhr对象支持绑定时就把监听函数绑定上去                    if (xhrOnProgress.onprogress && xhr.upload) {                        xhr.upload.onprogress = xhrOnProgress.onprogress;                    }                    return xhr;                }            }            $.ajax({                url: api.LIVEWEB.upload,                type: 'POST',                beforeSend: function(xhr) {                    if (cookie.get('token') && cookie.get('uid')) {                        xhr.setRequestHeader("token", cookie.get('token'));                        xhr.setRequestHeader("uid", cookie.get('uid'));                    }                },                xhr: xhrOnProgress(function(e) {                    var percent = e.loaded / e.total * 100; //计算百分比                    if (percent > 10) {                        self.data.show.upload.progress = percent;                        self.$update();                    }                    console.log('进度', percent);                }),                cache: false,                data: fd,                processData: false,                contentType: false            }).done(function(data) {                console.info('成功', data)                setTimeout(function() {                    self.data.show.upload.status = false;                    self.data.config.snapshotUrl = data.fileUrl + '?' + new Date().getTime();                    self.$update();                    event.origin.value = '';                    self.tip.showSuccessTip('上传成功');                }, 500);                            }).fail(function(data) {                console.info('失败', data)                setTimeout(function() {                    self.data.show.upload.status = false;                    self.$update();                    event.origin.value = '';                    self.tip.showErrorTip('上传失败，请重新上传');                }, 500);            });        },        /**         * 清空图片上传         */        picDel: function() {            this.data.generateData.shareData.imgUrl = '';            $('#fileUrl').val('');            this.$update();        },        /**         * 校验保存输入         */        verify: function() {            console.info('verify', this.data.config)            var reg = /^\d{1,6}$/,                verifyResult = false; //不超过6位的纯数字            if (util.getBytesLength(util.trim(this.data.config.title)) > 20) {                this.data.error.titleError = '请输入不超过20字的标题';                verifyResult = true;            }            if (util.getBytesLength(util.trim(this.data.config.description)) > 200) {                this.data.error.infoError = '请输入不超过200字的简介';                verifyResult = true;            }            if (this.data.config.isEncrypt && !util.trim(this.data.config.password)) {                this.data.error.pwdError = '密码不能为空！';                verifyResult = true;            }else if (this.data.config.isEncrypt && !reg.test(this.data.config.password)) {                this.data.error.pwdError = '请输入不超过6位的纯数字密码';                verifyResult = true;            }            if (verifyResult) {                this.$update();                return verifyResult;            }            return {                title: this.data.config.title, //标题                snapshotUrl: this.data.config.snapshotUrl, //封面图                description: this.data.config.description, //简介                isEncrypt: this.data.config.isEncrypt,                password: this.data.config.isEncrypt ? (this.data.config.password == '123456' ? '' : md5(this.data.config.password)) : '', //播放密码 兼容上次保存的密码 如果未改动则传空字符串                companyId: this.data.config.companyId,                deviceId: this.data.config.deviceId // 设备id            }        },        /**         * 保存/清除设置         * @param  {String} type save: 保存设置；clear: 清除设置         */        save: function(type, init) {            if (!this.data.show.check || this.data.config.delFlag) {                return;            }            if (this.data.show.saveStatus) {                return;            }            var self = this,                result;            this.data.error = {                titleError: '',                infoError: '',                pwdError: ''            }             if (type == 'save') {                result = this.verify();                console.info(11,result)                if (result === true) {                    return;                }                if (!init) {                   this.data.show.saveStatus = true;                 }                util.rest(api.LIVEWEB.addOrUpdate, {                    param: result,                    method: 'post',                    onload: function(data) {                        console.info('成功', data);                        self.data.show.saveStatus = false;                        self.$update();                        if (init) {                            self.initData(data);                        } else {                            self.tip.showSuccessTip('保存成功');                        }                    },                    onerror: function(data) {                        console.info('牺牲', data);                        self.data.show.saveStatus = false;                        self.$update();                        self.tip.showErrorTip('保存失败，请稍后再试');                    }                })            } else {                this.data.show.saveStatus = true;                //清除设置                util.rest(api.LIVEWEB.addOrUpdate, {                    param: {                        title: '', //标题                        snapshotUrl: '', //封面图                        description: '', //简介                        isEncrypt: 0,                        password: '', //播放密码                        companyId: '',                        deviceId: this.data.config.deviceId // 设备id                    },                    method: 'post',                    onload: function(data) {                        console.info('成功', data);                        self.data.config.title = ''; //标题                        self.data.config.snapshotUrl = ''; //封面图                        self.data.config.description = ''; //简介                        self.data.config.isEncrypt = '';                        self.data.config.password = ''; //播放密码                        self.data.config.companyId = '';                        self.data.show.saveStatus = false;                        self.$update();                                            self.tip.showSuccessTip('清除成功');                    },                    onerror: function(data) {                        console.info('牺牲', data);                        self.data.show.saveStatus = false;                        self.$update();                        self.tip.showErrorTip('保存失败，请稍后再试');                    }                })            }        }    });});