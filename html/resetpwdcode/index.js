define(['regularjs', 'jquery', '../../javascript/base/util', '../../html/resetpwdcode/index.html', '../../javascript/widget/tip.js', '../../javascript/widget/dialog.js', '../../html/loginnav/index.js'], function(Regular, $, util, index, tip, dialog) {    require('../../css/resetpwdcode.css')    return Regular.extend({        template: '<loginNav>' + index + '</loginNav>',        data: {            reset: {                account: '',//帐号                verifyCode: '',//验证码                type: '',//类型（phone or email）                timeOut: 0//发送            },            error: {                verifyError: ''            }        },        init: function() {                //提示框            this.tip = new tip();            this.tip.$inject('body');            //获取url带的参数            this.data.reset.account = util.getQueryString('account');            this.data.reset.type = util.getQueryString('type');            this.$update();            this.sendCode();        },        /**         * 获取验证码         */        sendCode: function() {            var self = this;            if (self.data.reset.timeOut) return;            //发送登录请求            util.rest('../sendCode', {                param: 'data',                method: 'post',                onload: function(data) {                    console.info('成功');                    if (data && typeof data != undefined) {                        self.data.reset.timeOut = 60;                        self.timer();                        self.$update();                    }                },                onerror: function(data) {                    console.info('牺牲');                    self.tip.showError('获取验证失败，请点击重试');                    self.data.error.verifyError = '获取验证失败，请点击重试';                    self.data.reset.timeOut = 60;                    self.timer();                    self.$update();                }            })        },        /**         * 倒数计时         */        timer: function() {            var self = this;            this.__timer = setTimeout(function() {                self.data.reset.timeOut--;                console.info(self.data.reset.timeOut)                if (self.data.reset.timeOut === 0) {                    clearTimeout(self.__timer);                } else {                    self.timer();                }                self.$update();            }, 1000)        },        /**         * 确认按钮点击         */        sureClick: function() {            var self = this;            if (!self.data.reset.account) {                self.tip.showError('无效链接');                return;            }            console.info(888);            var result = this.verify();            this.data.error = {                verifyError: ''            }            if (result.error) {                this.tip.showError(result.errmsg);                this.data.error.verifyError = result.errmsg;                return;            }            console.info('send1', result);            //发送重置密码请求            util.rest('../resetpwd', {                param: result,                method: 'post',                onload: function() {                    console.info('成功');                    if (data && typeof data != undefined) {                        //跳转带参数                        window.location.href = './resetpwdenter.html?type=' + self.data.reset.type + '&account=' + self.data.reset.account;                    }                    //各类错误todo                },                onerror: function() {                    console.info('牺牲');                    window.location.href = './resetpwdenter.html?type=' + self.data.reset.type + '&account=error' + self.data.reset.account;                }            })        },        /**         * 校验账号密码输入         */        verify: function() {            if (!util.trim(this.data.reset.verifyCode)) {                return {                    error: true,                    errmsg: '请输入收到的验证码'                }            }            return {                account: util.trim(this.data.reset.verifyCode),                code: this.data.reset.verifyCode            };        }    });});